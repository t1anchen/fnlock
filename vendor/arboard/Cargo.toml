# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.67.1"
name = "arboard"
version = "3.4.1"
authors = [
    "Artur Kovacs <kovacs.artur.barnabas@gmail.com>",
    "Avi Weinstock <aweinstock314@gmail.com>",
    "Arboard contributors",
]
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Image and text handling for the OS clipboard."
readme = "README.md"
keywords = [
    "clipboard",
    "image",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/1Password/arboard"

[lib]
name = "arboard"
path = "src/lib.rs"

[[example]]
name = "daemonize"
path = "examples/daemonize.rs"

[[example]]
name = "get_image"
path = "examples/get_image.rs"
required-features = ["image-data"]

[[example]]
name = "hello_world"
path = "examples/hello_world.rs"

[[example]]
name = "set_html"
path = "examples/set_html.rs"

[[example]]
name = "set_image"
path = "examples/set_image.rs"
required-features = ["image-data"]

[dependencies]

[dev-dependencies.env_logger]
version = "0.9.0"

[features]
default = ["image-data"]
image-data = [
    "core-graphics",
    "image",
    "windows-sys",
]
wayland-data-control = ["wl-clipboard-rs"]

[target.'cfg(all(unix, not(any(target_os="macos", target_os="android", target_os="emscripten"))))'.dependencies.image]
version = "0.25"
features = ["png"]
optional = true
default-features = false

[target.'cfg(all(unix, not(any(target_os="macos", target_os="android", target_os="emscripten"))))'.dependencies.log]
version = "0.4"

[target.'cfg(all(unix, not(any(target_os="macos", target_os="android", target_os="emscripten"))))'.dependencies.parking_lot]
version = "0.12"

[target.'cfg(all(unix, not(any(target_os="macos", target_os="android", target_os="emscripten"))))'.dependencies.wl-clipboard-rs]
version = "0.8"
optional = true

[target.'cfg(all(unix, not(any(target_os="macos", target_os="android", target_os="emscripten"))))'.dependencies.x11rb]
version = "0.13"

[target.'cfg(target_os = "macos")'.dependencies.core-graphics]
version = "0.23"
optional = true

[target.'cfg(target_os = "macos")'.dependencies.image]
version = "0.25"
features = ["tiff"]
optional = true
default-features = false

[target.'cfg(target_os = "macos")'.dependencies.objc2]
version = "0.5.1"
features = ["relax-void-encoding"]

[target.'cfg(target_os = "macos")'.dependencies.objc2-app-kit]
version = "0.2.0"
features = [
    "NSPasteboard",
    "NSPasteboardItem",
    "NSImage",
]

[target.'cfg(target_os = "macos")'.dependencies.objc2-foundation]
version = "0.2.0"
features = [
    "NSArray",
    "NSString",
    "NSEnumerator",
    "NSGeometry",
]

[target."cfg(windows)".dependencies.clipboard-win]
version = "5.3.1"

[target."cfg(windows)".dependencies.image]
version = "0.25"
features = ["png"]
optional = true
default-features = false

[target."cfg(windows)".dependencies.log]
version = "0.4"

[target."cfg(windows)".dependencies.windows-sys]
version = "0.48.0"
features = [
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
    "Win32_System_DataExchange",
    "Win32_System_Memory",
    "Win32_System_Ole",
]
optional = true
